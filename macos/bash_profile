# mamp
# export PATH="/Applications/MAMP/Library/bin:$PATH"

# homebrew
export HOMEBREW_GITHUB_API_TOKEN="78dd64812c4ec8a30f49e9746fa6b638866a17e3"

# Gemini
export GEMINI_LICENSE_KEY='/Hb9Q1qKp87yk9S4IeBuAwoPoDKzqBrmT6qhxpZzz2A='

# Sentinel
export GENESIS_DB_URL="postgres://ww4r2tvhy7z9:9g5sjcrhazgz@127.0.0.1:5432/genesis?sslmode=disable"
export IMAGE_CLASSIFIER_ENABLED=0
export OBJECT_DETECTOR_ENABLED=0
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH}

# mxnet
export MXNET_CPU_WORKER_NTHREADS=4
# export MXNET_CPU_PRIORITY_NTHREADS=4
# export MXNET_MP_WORKER_NTHREADS=4
# export KMP_AFFINITY="granularity=fine,compact,1,0"
# export OMP_NUM_THREADS=2
# export MXNET_SUBGRAPH_BACKEND=1


# Qt
export QT_LIBRARY_PATH=${HOME}/Development/lib/Qt5.12.0/5.12.0/clang_64
export PATH=${QT_LIBRARY_PATH}/bin:${PATH}
export CODE_SIGN_IDENTITY="Developer ID Application: Gilbert Francois Duivesteijn (2XF68W467D)"

# Matlab
export PATH=/Applications/MATLAB_R2017a.app/bin:${PATH}

# Python
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi
export PIPENV_VENV_IN_PROJECT=1

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias vi='nvim'

# for mosh
export LANG="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"

# for tmux
export TERM=xterm-256color

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# AWS EC2
alias axion="mosh ubuntu@axion-c5.paracausal.ch"
alias awsbb="mosh ubuntu@dev.blitzblit.com"
alias ss="ssh gilbert@192.168.1.83"
alias nano2="mosh ubuntu@192.168.20.97"
alias rpi3="ssh pi@192.168.20.68"
alias lab-gilbert="mosh --ssh='ssh -i ~/.ssh/gilbert-dev-machine.pem' ubuntu@lab-gilbert.instance.ava-x.ch"
alias lab-gilbert-x="ssh -i ~/.ssh/gilbert-dev-machine.pem -Y ubuntu@lab-gilbert.instance.ava-x.ch"
function ml-gpu() {
    mosh --ssh='ssh -i ~/.ssh/gilbert-dev-machine.pem' ubuntu@$1
}


# docker
alias drc="docker rm $(docker ps -a -f status=exited -q)"

# AWS S3
function apup() {
   aws --profile ava-x-skuld s3 sync --sse AES256 $1 s3://apothecary.smbh.ch/$2
}

function apdown() {
   aws --profile ava-x-skuld s3 sync --sse AES256 s3://apothecary.smbh.ch/$1 $2
}

# dataup copy myfile.tar data/data/
function dataup() {
   aws --profile ava-x-skuld s3 $1 --sse AES256 $2 s3://data-gilbert.eu-west-1.ava-x.ch/$3
}

function datadown() {
   aws --profile ava-x-skuld s3 $1 --sse AES256 s3://data-gilbert.eu-west-1.ava-x.ch/$2 $3
}

function datals() {
   aws --profile ava-x-skuld s3 ls s3://data-gilbert.eu-west-1.ava-x.ch/$1
}

# Setup fzf
# ---------
if [[ ! "$PATH" == *${HOME}/.fzf/bin* ]]; then
  export PATH="${PATH:+${PATH}:}${HOME}/.fzf/bin"
fi

# Auto-completion
# ---------------
[[ $- == *i* ]] && source "${HOME}/.fzf/shell/completion.bash" 2> /dev/null

# Key bindings
# ------------
source "${HOME}/.fzf/shell/key-bindings.bash"
export PATH="/usr/local/sbin:$PATH"

# GStreamer
export PATH="/Library/Frameworks/GStreamer.framework/Commands":$PATH
